// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.motorcontrol.MotorController;
import edu.wpi.first.wpilibj.motorcontrol.MotorControllerGroup;
import edu.wpi.first.wpilibj.motorcontrol.PWMVictorSPX;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveBase extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
public static final double ForwardDistance = .5;
public static final double BackUp = .25;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private PWMVictorSPX motorController1;
private PWMVictorSPX motorController2;
private MotorControllerGroup leftMotor;
private PWMVictorSPX motorController3;
private PWMVictorSPX motorController4;
private MotorControllerGroup rightMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public DriveBase() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
motorController1 = new PWMVictorSPX(0);
 addChild("Motor Controller 1",motorController1);
 motorController1.setInverted(false);

motorController2 = new PWMVictorSPX(1);
 addChild("Motor Controller 2",motorController2);
 motorController2.setInverted(false);

leftMotor = new MotorControllerGroup(motorController1, motorController2  );
 addChild("LeftMotor",leftMotor);
 

motorController3 = new PWMVictorSPX(2);
 addChild("Motor Controller 3",motorController3);
 motorController3.setInverted(true);

motorController4 = new PWMVictorSPX(3);
 addChild("Motor Controller 4",motorController4);
 motorController4.setInverted(true);

rightMotor = new MotorControllerGroup(motorController3, motorController4  );
 addChild("RightMotor",rightMotor);
 


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

